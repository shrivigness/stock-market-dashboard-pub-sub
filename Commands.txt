docker network create pubsub


docker run --rm --network=pubsub --name publisher1_dns publisher1

docker build -t publisher1 .

docker build -t eventmanagernode .


>> docker run --rm --network=pubsub --name publisher1_dns publisher1
>> docker run --rm --network=pubsub eventmanagernode


docker run -t -p 0.0.0.0:5555:5555 eventmanagernode
docker run -t -p 0.0.0.0:6000:6000 subscriber3

docker compose 



"""

url = "https://yh-finance.p.rapidapi.com/stock/v2/get-chart"

querystring = {"interval":"5m","symbol":"TSLA","range":"1d","region":"US"}

headers = {
    'x-rapidapi-host': "yh-finance.p.rapidapi.com",
    'x-rapidapi-key': "6c88faa169mshf884cd03d448ab2p151f28jsne5865b21021b"
    }
response = ''

docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management  

docker build -t pub1 .
docker build -t pub2 .
docker build -t pub3 .
docker build -t ip .
docker build -t client .
docker build -t sub3 .

docker run -it --rm --network=pubsub pub1
docker run -it --rm --network=pubsub pub2
docker run -it --rm --network=pubsub pub3
docker run -it --rm --network=pubsub --name IP1 ip
docker run -it --rm --network=pubsub --name client client
docker run -it --rm --network=pubsub --name sub3 client

docker run -it --rm --network=pubsub --name sub3 sub3

docker volume create --name=mongodata 

docker run --name mongodb -v mongodata:/data/db -d mongo

docker run --network=pubsub --name mongodb -v mongodata:/data/db -d mongo
